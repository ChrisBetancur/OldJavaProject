type: edu
files:
- name: src/Task.java
  visible: true
  placeholders:
  - offset: 670
    length: 15
    placeholder_text: //TODO:判断是否满足规则
    initial_state:
      length: 15
      offset: 670
    initialized_from_dependency: false
    possible_answer: queen[j] == queen[cur] || queen[j] - j == queen[cur]-cur || queen[j]
      + j == queen[cur] + cur
    selected: false
    status: Unchecked
  - offset: 1076
    length: 10
    placeholder_text: //判断是否满足要求
    initial_state:
      length: 10
      offset: 1076
    initialized_from_dependency: false
    possible_answer: vis[0][i] && !vis[1][cur+i] && !vis[2][cur-i+n]
    selected: false
    status: Unchecked
  - offset: 1109
    length: 4
    placeholder_text: 设置数组
    initial_state:
      length: 4
      offset: 1109
    initialized_from_dependency: false
    possible_answer: vis[0][i]=vis[1][cur+i]=vis[2][cur-i+n]
    selected: false
    status: Unchecked
  - offset: 1177
    length: 2
    placeholder_text: 回溯
    initial_state:
      length: 2
      offset: 1177
    initialized_from_dependency: false
    possible_answer: vis[0][i]=vis[1][cur+i]=vis[2][cur-i+n]
    selected: false
    status: Unchecked
  text: |-
    import com.sun.org.apache.xpath.internal.objects.XBoolean;

    import java.util.Arrays;

    public class Task {
        static int total = 0;  //put your task here
        static int[] queen; // slove 1
        static boolean [][]vis; // slove 2
        public static void main(String[] args) {
            int n = 8;
            queen = new int[n];
            vis=new boolean[3][n*2];
            slove2(n, 0);



        }

        static void slove(int n, int cur) {
            if (cur == n) {
                total++;
            } else {
                for (int i = 0; i < n; i++) {
                    boolean flag = true;
                    queen[cur] = i;
                    for (int j = 0; j < cur; j++) {
                        if (//TODO:判断是否满足规则) {
                            flag = false;
                            break;
                        }
                    }
                    if (flag) {

                        slove(n, cur + 1);

                    }
                }

            }
        }


        static void slove2(int n,int cur){
            if(cur==n){
                total++;
            }else {
                for (int i = 0; i <n ; i++) {
                    if(!//判断是否满足要求){
                        设置数组=true;
                        slove2(n,cur+1);
                        回溯=false;

                    }
                }
            }
        }

    }
  learner_created: false
- name: test/Tests.java
  visible: false
  text: |-
    import org.junit.Assert;
    import org.junit.Test;

    public class Tests {
      @Test
      public void testSolution() {
        // put your test here
        Assert.fail("Tests not implemented for the task");
      }
    }
  learner_created: false
status: Unchecked
record: -1
